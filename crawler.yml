AWSTemplateFormatVersion: '2010-09-09'
Description: Web Crawler Application

Parameters:
  S3Bucket:
    Description: S3 bucket name for the Lambda function code
    Type: String

Resources:

  # DynamoDB Table to store price history
  PriceHistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PriceHistory
      AttributeDefinitions:
        - AttributeName: ProductId
          AttributeType: S
        - AttributeName: Timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: ProductId
          KeyType: HASH
        - AttributeName: Timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # Lambda Function for Web Crawling and Price Monitoring
  WebCrawlerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: WebCrawler
      Runtime: python3.9
      Handler: app.handler
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: app.zip
      Role: !GetAtt WebCrawlerFunctionRole.Arn

  WebCrawlerFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:Query
                Resource: !GetAtt PriceHistoryTable.Arn
        - PolicyName: SESAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource: '*'

  # CloudWatch Event Rule to trigger the Lambda function
  WebCrawlerSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: 'rate(12 hours)'
      Targets:
        - Arn: !GetAtt WebCrawlerFunction.Arn
          Id: WebCrawlerFunction

Outputs:
  PriceHistoryTableName:
    Description: DynamoDB table name for price history
    Value: !Ref PriceHistoryTable