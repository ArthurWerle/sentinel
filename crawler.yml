AWSTemplateFormatVersion: '2010-09-09'
Description: Web Crawler Application

Parameters:
  PythonFile:
    Description: Path to the Python file for the Lambda function
    Type: String
    Default: app.py
  S3Bucket:
    Type: String
    Description: The name of the S3 bucket where the Python file is stored

Resources:
  PriceHistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PriceHistory
      AttributeDefinitions:
        - AttributeName: ProductId
          AttributeType: S
        - AttributeName: Timestamp
          AttributeType: S
        - AttributeName: Price
          AttributeType: N
      KeySchema:
        - AttributeName: ProductId
          KeyType: HASH
        - AttributeName: Timestamp
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: PriceIndex
          KeySchema:
            - AttributeName: Price
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  WebCrawlerFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: WebCrawlerPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: !GetAtt PriceHistoryTable.Arn

  WebCrawlerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: WebCrawler
      Runtime: python3.9
      Handler: index.handler
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref PythonFile
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref PriceHistoryTable
      Role: !GetAtt WebCrawlerFunctionRole.Arn
      Timeout: 300
      MemorySize: 256

  WebCrawlerScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Schedule for Web Crawler Lambda Function"
      ScheduleExpression: "rate(12 hours)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt WebCrawlerFunction.Arn
          Id: "WebCrawlerSchedule"

  WebCrawlerSchedulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref WebCrawlerFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt WebCrawlerScheduleRule.Arn

Outputs:
  LambdaFunctionArn:
    Description: ARN of the Lambda function
    Value: !GetAtt WebCrawlerFunction.Arn
  DynamoDBTableName:
    Description: Name of the DynamoDB table
    Value: !Ref PriceHistoryTable

Resources:
  LambdaBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref S3Bucket